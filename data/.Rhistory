addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = shapes, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", shapes$Gini)(Gini), popup = popup, layerId = geoID
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
popup <- paste0("<strong>Name: </strong>",
paste(shapes@data$NAME," ",shapes$stab, " ", shapes$GEOID), "<br> <strong> Gini Coefficient: </strong>",
us_county$Gini)
geoID <- as.vector(shapes@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = shapes, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", shapes$Gini)(Gini), popup = popup, layerId = geoID
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
shiny::runApp('OEIv2')
load("08PolygonsDF.rdata")
fips <- read.csv("C:/Users/tneumann/Downloads/fips.csv")
View(fips)
fips$ABB <- NA
fips$ABB <- NULL
us_county@data <- merge(us_county@data, fips, by.x = "STATEFP", by.y = "FIPS", all.x = TRUE)
View(us_county@data)
fips$FIPS <- ifelse(fips$FIPS < 10, paste("0", fips$FIPS), paste(fips$FIPS))
load("08PolygonsDF.rdata")
fips <- read.csv("C:/Users/tneumann/Downloads/fips.csv")
fips$ABB <- NULL
fips$FIPS <- ifelse(fips$FIPS < 10, paste("0", fips$FIPS), paste(fips$FIPS))
us_county@data <- merge(us_county@data, fips, by.x = "STATEFP", by.y = "FIPS", all.x = TRUE)
View(us_county@data)
load("08PolygonsDF.rdata")
fips <- read.csv("C:/Users/tneumann/Downloads/fips.csv")
fips$ABB <- NULL
fips$FIPS <- ifelse(fips$FIPS < 10, paste("0", fips$FIPS, sep = ""), paste(fips$FIPS))
us_county@data <- merge(us_county@data, fips, by.x = "STATEFP", by.y = "FIPS", all.x = TRUE)
View(us_county@data)
save("08PolygonsDF.rdata")
save(us_county, file ="08PolygonsDF.rdata")
load("08PolygonsDF.rdata")
View(us_county@data)
load("census2012_2014.rdata")
# 08-10
load("census2008_2010.rdata")
census <- rbind(census2008_2010, census2012_2014)
census <- census[census$PUMA!='0077777',]
pc_convert <- read.csv("puma_county.csv")
pc_convert <- read.csv("Viz_Data_Formating/puma_county.csv")
pc_convert <- pc_convert[-1,]
View(pc_convert)
census$key <- ifelse(df$ST<10, paste('0',census$ST,census$PUMA,sep=''), paste(census$ST,census$PUMA,sep=''))
pc_convert$key <- paste(pc_convert$state,pc_convert$puma2k,sep='')
# merge two on key, add county(FIPs), stab, cntyname to df
pc_convert<-pc_convert[,c(3,4,5,9)]
pc_merge<-merge(x=census, y = pc_convert,by.x="key",by.y="key")
census$key <- ifelse(census$ST<10, paste('0',census$ST,census$PUMA,sep=''), paste(census$ST,census$PUMA,sep=''))
pc_convert$key <- paste(pc_convert$state,pc_convert$puma2k,sep='')
# merge two on key, add county(FIPs), stab, cntyname to df
pc_convert<-pc_convert[,c(3,4,5,9)]
pc_merge<-merge(x=census, y = pc_convert,by.x="key",by.y="key")
pc_convert <- read.csv("Viz_Data_Formating/puma_county.csv")
pc_convert <- pc_convert[-1,]
View(pc_convert)
pc_convert$key <- paste(pc_convert$state,pc_convert$puma2k,sep='')
View(pc_convert)
View(census)
pc_convert<-pc_convert[,c(3,4,5,9)]
pc_merge<-merge(x=census, y = pc_convert,by.x="key",by.y="key", all.x = TRUE)
rm(census2008_2010)
rm(census2012_2014)
library(data.table)
census <- data.table(census)
pc_convert <- data.table(pc_convert)
pc_merge<-merge(census, pc_convert,by="key", all.x = TRUE)
pc_merge<-merge(census, pc_convert,by="key")
View(pc_convert)
View(pc_convert)
View(pc_convert)
View(census)
pc_merge<-merge(census, pc_convert,by=.EACHI)
pc_merge<-merge(census, pc_convert,by="key", allow.cartesian=TRUE)
head(pc_merge)
load("08PolygonsDF.rdata")
head(pc_merge, n = 20)
head(us_county@data)
gender <- ddply(pc_merge, .(YEAR, county, SEX_labelled), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
View(gender)
colnames(gender)[which(names(gender) == "5%")]  <- "fifth"
colnames(gender)[which(names(gender) == "25%")] <- "twentyfive"
colnames(gender)[which(names(gender) == "50%")] <- "fifty"
colnames(gender)[which(names(gender) == "75%")] <- "seventyfive"
colnames(gender)[which(names(gender) == "95%")] <- "ninetyfive"
colnames(gender)[which(names(gender) == "99%")] <- "ninetynine"
View(gender)
save(gender, file = "gender.rdata")
Education <- ddply(pc_merge, .(YEAR, county, EDUCATION), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
#  relabel columns so it can be accessed
colnames(Education)[which(names(Education) == "5%")]  <- "fifth"
colnames(Education)[which(names(Education) == "25%")] <- "twentyfive"
colnames(Education)[which(names(Education) == "50%")] <- "fifty"
colnames(Education)[which(names(Education) == "75%")] <- "seventyfive"
colnames(Education)[which(names(Education) == "95%")] <- "ninetyfive"
colnames(Education)[which(names(Education) == "99%")] <- "ninetynine"
View(Education)
save(Education, file = "Education.rdata")
Age <- ddply(pc_merge, .(YEAR, county, AGECAT), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
colnames(Age)[which(names(Age) == "5%")]  <- "fifth"
colnames(Age)[which(names(Age) == "25%")] <- "twentyfive"
colnames(Age)[which(names(Age) == "50%")] <- "fifty"
colnames(Age)[which(names(Age) == "75%")] <- "seventyfive"
colnames(Age)[which(names(Age) == "95%")] <- "ninetyfive"
colnames(Age)[which(names(Age) == "99%")] <- "ninetynine"
save(Age, file = "Age.rdata")
Race <- ddply(pc_merge, .(YEAR, county, RACE), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
colnames(Race)[which(names(Race) == "5%")]  <- "fifth"
colnames(Race)[which(names(Race) == "25%")] <- "twentyfive"
colnames(Race)[which(names(Race) == "50%")] <- "fifty"
colnames(Race)[which(names(Race) == "75%")] <- "seventyfive"
colnames(Race)[which(names(Race) == "95%")] <- "ninetyfive"
colnames(Race)[which(names(Race) == "99%")] <- "ninetynine"
save(Race, file = "Race.rdata")
Gender_and_Educ <- ddply(pc_merge, .(YEAR, county, SEX_labelled, EDUCATION), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
colnames(Gender_and_Educ)[which(names(Gender_and_Educ) == "5%")]  <- "fifth"
colnames(Gender_and_Educ)[which(names(Gender_and_Educ) == "25%")] <- "twentyfive"
colnames(Gender_and_Educ)[which(names(Gender_and_Educ) == "50%")] <- "fifty"
colnames(Gender_and_Educ)[which(names(Gender_and_Educ) == "75%")] <- "seventyfive"
colnames(Gender_and_Educ)[which(names(Gender_and_Educ) == "95%")] <- "ninetyfive"
colnames(Gender_and_Educ)[which(names(Gender_and_Educ) == "99%")] <- "ninetynine"
save(Gender_and_Educ, file = "Gender_and_Educ.rdata")
View(Gender_and_Educ)
#  by Gender and Age
Gender_and_Age <- ddply(pc_merge, .(YEAR, county, SEX_labelled, AGECAT), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
colnames(Gender_and_Age)[which(names(Gender_and_Age) == "5%")]  <- "fifth"
colnames(Gender_and_Age)[which(names(Gender_and_Age) == "25%")] <- "twentyfive"
colnames(Gender_and_Age)[which(names(Gender_and_Age) == "50%")] <- "fifty"
colnames(Gender_and_Age)[which(names(Gender_and_Age) == "75%")] <- "seventyfive"
colnames(Gender_and_Age)[which(names(Gender_and_Age) == "95%")] <- "ninetyfive"
colnames(Gender_and_Age)[which(names(Gender_and_Age) == "99%")] <- "ninetynine"
save(Gender_and_Age, file = "Gender_and_Age.rdata")
##############################################
#  by Gender and RACE
Gender_and_Race <- ddply(pc_merge, .(YEAR, county, SEX_labelled, RACE), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
colnames(Gender_and_Race)[which(names(Gender_and_Race) == "5%")]  <- "fifth"
colnames(Gender_and_Race)[which(names(Gender_and_Race) == "25%")] <- "twentyfive"
colnames(Gender_and_Race)[which(names(Gender_and_Race) == "50%")] <- "fifty"
colnames(Gender_and_Race)[which(names(Gender_and_Race) == "75%")] <- "seventyfive"
colnames(Gender_and_Race)[which(names(Gender_and_Race) == "95%")] <- "ninetyfive"
colnames(Gender_and_Race)[which(names(Gender_and_Race) == "99%")] <- "ninetynine"
save(Gender_and_Race, file = "Gender_and_Race.rdata")
##############################################
#  by Age and RACE
Age_and_Race <- ddply(pc_merge, .(YEAR, county, AGECAT, RACE), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
colnames(Age_and_Race)[which(names(Age_and_Race) == "5%")]  <- "fifth"
colnames(Age_and_Race)[which(names(Age_and_Race) == "25%")] <- "twentyfive"
colnames(Age_and_Race)[which(names(Age_and_Race) == "50%")] <- "fifty"
colnames(Age_and_Race)[which(names(Age_and_Race) == "75%")] <- "seventyfive"
colnames(Age_and_Race)[which(names(Age_and_Race) == "95%")] <- "ninetyfive"
colnames(Age_and_Race)[which(names(Age_and_Race) == "99%")] <- "ninetynine"
save(Age_and_Race, file = "Age_and_Race.rdata")
##############################################
#  by Race and Education
Race_and_Education <- ddply(pc_merge, .(YEAR, county, EDUCATION, RACE), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
colnames(Race_and_Education)[which(names(Race_and_Education) == "5%")]  <- "fifth"
colnames(Race_and_Education)[which(names(Race_and_Education) == "25%")] <- "twentyfive"
colnames(Race_and_Education)[which(names(Race_and_Education) == "50%")] <- "fifty"
colnames(Race_and_Education)[which(names(Race_and_Education) == "75%")] <- "seventyfive"
colnames(Race_and_Education)[which(names(Race_and_Education) == "95%")] <- "ninetyfive"
colnames(Race_and_Education)[which(names(Race_and_Education) == "99%")] <- "ninetynine"
save(Race_and_Education, file = "Race_and_Education.rdata")
##############################################
#  by AGE and Education
Age_and_Education <- ddply(pc_merge, .(YEAR, county, EDUCATION, AGECAT), function (tmp) {quantile(tmp$Income, c(0.05, 0.25, 0.5, 0.75, 0.95, 0.99))})
colnames(Age_and_Education)[which(names(Age_and_Education) == "5%")]  <- "fifth"
colnames(Age_and_Education)[which(names(Age_and_Education) == "25%")] <- "twentyfive"
colnames(Age_and_Education)[which(names(Age_and_Education) == "50%")] <- "fifty"
colnames(Age_and_Education)[which(names(Age_and_Education) == "75%")] <- "seventyfive"
colnames(Age_and_Education)[which(names(Age_and_Education) == "95%")] <- "ninetyfive"
colnames(Age_and_Education)[which(names(Age_and_Education) == "99%")] <- "ninetynine"
save(Age_and_Education, file = "Age_and_Education.rdata")
##############################################
View(Gender_and_Age)
View(Age_and_Education)
head(Age_and_Education)
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
load("data/08PolygonsDF.rdata")
load("OEIV2/data/08PolygonsDF.rdata")
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = us_county, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", us_county$Gini)(Gini), popup = popup, layerId = geoID
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
popup <- paste0("<strong>Name: </strong>",
paste(us_county$NAME," ",us_county$State), "<br> <strong> Gini Coefficient: </strong>",
us_county$Gini)
geoID <- as.vector(us_county@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = us_county, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", us_county$Gini)(Gini), popup = popup, layerId = geoID
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
View(us_county@data)
rm(us_county)
load("OEIV2/data/08PolygonsDF.rdata")
View(us_county@data)
popup <- paste0("<strong>Name: </strong>",
paste(us_county$NAME," ",us_county$State), "<br> <strong> Gini Coefficient: </strong>",
us_county$Gini)
geoID <- as.vector(us_county@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = us_county, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", us_county$Gini)(Gini), popup = popup
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
x <- subset(us_county@data, Name == "Dodge" & State == "Georgia")
x <- subset(us_county@data, NAME == "Dodge" & State == "Georgia")
x
setwd("T:/ObserveEconomicInequality")
dat <- readOGR("shp/cb_2014_us_county_500k.shp",
layer = "cb_2014_us_county_500k", verbose = FALSE)
View(dat@data)
dat@data$ID <- row.names(dat@data)
View(dat@data)
dat@data <- dat@data[,c("GEOID", "ID")]
us_county@data <- merge(us_county@data, dat@data, by = "GEOID")
View(us_county@data)
row.names(us_county@data) <- us_county@data$ID
View(us_county@data)
popup <- paste0("<strong>Name: </strong>",
paste(us_county$NAME," ",us_county$State), "<br> <strong> Gini Coefficient: </strong>",
us_county$Gini)
geoID <- as.vector(us_county@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = us_county, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", us_county$Gini)(Gini), popup = popup
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
popup <- paste0("<strong>Name: </strong>",
paste(us_county$NAME," ",us_county$State), "<br> <strong> Gini Coefficient: </strong>",
us_county$Gini)
geoID <- as.vector(us_county@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = us_county, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", us_county$Gini)(Gini), popup = popup
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
View(dat@data)
setwd("T:/ObserveEconomicInequality")
dat <- readOGR("shp/cb_2014_us_county_500k.shp",
layer = "cb_2014_us_county_500k", verbose = FALSE)
View(dat@data)
popup <- paste0("<strong>Name: </strong>",
paste(dat$NAME))
geoID <- as.vector(dat@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = dat, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", dat$AWATER)(AWATER), popup = popup
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
load("census2008_2010.rdata")
load("census2012_2014.rdata")
pc_convert <- read.csv("Viz_Data_Formating/puma_county.csv")
pc_convert <- pc_convert[-1,]
census2014 <- subset(census2012_2014, YEAR ==2014)
census2014 <- census2014[census2014$PUMA!='0077777',]
census14$key <- ifelse(census2014$ST<10, paste('0',census2014$ST,census2014$PUMA,sep=''), paste(census2014$ST,census2014$PUMA,sep=''))
pc_convert$key <- paste(pc_convert$state,pc_convert$puma2k,sep='')
census2014$key <- ifelse(census2014$ST<10, paste('0',census2014$ST,census2014$PUMA,sep=''), paste(census2014$ST,census2014$PUMA,sep=''))
pc_convert$key <- paste(pc_convert$state,pc_convert$puma2k,sep='')
pc_merge<-merge(x=census2014, y = pc_convert,by.x="key",by.y="key")
library(ineq)
gini <- ddply(pc_merge, .(county), summarise, Gini = ineq(Income, type = "Gini"))
View(gini)
new_df <- data.frame(GEOID = dat@data$GEOID)
census2008 <- subset(census2008_2010, YEAR ==2008)
census2008 <- census2008[census2008$PUMA!='0077777',]
census2008$key <- ifelse(census2008$ST<10, paste('0',census2008$ST,census2008$PUMA,sep=''), paste(census2008$ST,census2008$PUMA,sep=''))
pc_convert$key <- paste(pc_convert$state,pc_convert$puma2k,sep='')
pc_merge<-merge(x=census2008, y = pc_convert,by.x="key",by.y="key")
library(ineq)
gini <- ddply(pc_merge, .(county), summarise, Gini = ineq(Income, type = "Gini"))
new_df <- merge(new_df, gini, by.x = "GEOID", by.y = "county", all.x = TRUE)
View(new_df)
dat@data <- arrange(dat@data, GEOID)
dat@data <- cbind(dat@data, new_df$Gini)
popup <- paste0("<strong>Name: </strong>",
paste(dat@data$NAME), "<br> <strong> Gini Coefficient: </strong>",
dat@data$Gini)
geoID <- as.vector(dat@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = shapes, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", dat$Gini)(Gini), popup = popup, layerId = geoID
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
popup <- paste0("<strong>Name: </strong>",
paste(dat@data$NAME), "<br> <strong> Gini Coefficient: </strong>",
dat@data$Gini)
geoID <- as.vector(dat@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = dat, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", dat$Gini)(Gini), popup = popup, layerId = geoID
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
View(dat@data)
names(dat@data)[10] <- "Gini"
popup <- paste0("<strong>Name: </strong>",
paste(dat@data$NAME), "<br> <strong> Gini Coefficient: </strong>",
dat@data$Gini)
geoID <- as.vector(dat@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = dat, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", dat$Gini)(Gini), popup = popup, layerId = geoID
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
dat <- readOGR("shp/cb_2014_us_county_500k.shp",
layer = "cb_2014_us_county_500k", verbose = FALSE)
View(dat@data)
us_county@data <- arrange(us_coounty@data, ID)
us_county@data <- arrange(us_county@data, ID)
View(us_county@data)
tmp <- load("OEIV2/data/Age.rdata")
load("OEIV2/data/Gender.rdata")
View(gender)
load("OEIV2/data/Gender_and_Age.rdata")
load("OEIV2/data/Gender_and_Educ.rdata")
levels(census2014$AGECAT)
levels(census2014$RACE)
levels(as.factor(census2014$RACE)_)
levels(as.factor(census2014$RACE))
levels(as.factor(census2014$EDUCATION))
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
View(gender)
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
shiny::runApp('OEIv2')
setwd("T:/ObserveEconomicInequality")
dat <- readOGR("shp2/cb_2014_us_county_20m.shp",
layer = "cb_2014_us_county_20m", verbose = FALSE)
leaflet()   %>%   addTiles(urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>') %>%
addPolygons(data = dat, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5)
View(x)
new_df <- data.frame(GEOID = dat@data$GEOID)
new_df <- merge(new_df, gini, by.x = "GEOID", by.y = "county", all.x = TRUE)
View(new_df)
new_df1 <- spCbind(dat, gini)
spCbind?
install.packages("maptools")
library(maptools)
new_df1 <- spCbind(dat, gini$Gini)
View(dat@data)
dat@data <- arrange(dat@data, GEOID)
View(dat@data)
dat <- readOGR("shp2/cb_2014_us_county_20m.shp",
layer = "cb_2014_us_county_20m", verbose = FALSE)
dat@data$ID <- row.names(dat@data)
View(dat@data)
dat@data$ID <- as.numeric(row.names(dat@data))
View(dat@data)
dat@data <- arrange(dat@data, GEOID)
View(dat@data)
tmp <- dat@data
tmp$Gini <- new_df$Gini
View(tmp)
row.names(tmp) <- tmp$ID
tmp <- arrange(tmp, ID)
dat@data <- tmp
View(dat@data)
row.names(dat@data) <- as.character(dat@data$ID)
View(dat@data)
popup <- paste0("<strong>Name: </strong>",
paste(dat@data$NAME), "<br> <strong> Gini Coefficient: </strong>",
dat@data$Gini)
geoID <- as.vector(dat@data$GEOID)
leaflet() %>%
addTiles(
urlTemplate = "//{s}.tiles.mapbox.com/v3/jcheng.map-5ebohr46/{z}/{x}/{y}.png",
attribution = 'Maps by <a href="http://www.mapbox.com/">Mapbox</a>'
) %>%
addPolygons(
data = dat, stroke = TRUE, fillOpacity = 0.5, smoothFactor = 0.5,
color = ~colorQuantile("Blues", dat$Gini)(Gini), popup = popup, layerId = geoID
) %>%
setView(lng = -81.99, lat = 32.77, zoom = 4)
setwd("T:/ObserveEconomicInequality/OEIV2/data")
us_county <- dat
save(us_county, file = "mapFinal.rdata")
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
shiny::runApp('T:/ObserveEconomicInequality/OEIv2')
